<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alignment" xml:space="preserve">
    <value>Alignment</value>
  </data>
  <data name="CBItemAscending" xml:space="preserve">
    <value>Ascending</value>
  </data>
  <data name="CBItemDescending" xml:space="preserve">
    <value>Descending</value>
  </data>
  <data name="CBItemFant" xml:space="preserve">
    <value>Fant</value>
  </data>
  <data name="CBItemFIFO" xml:space="preserve">
    <value>First In First Out</value>
  </data>
  <data name="CBItemLIFO" xml:space="preserve">
    <value>Last In First Out</value>
  </data>
  <data name="CBItemLinear" xml:space="preserve">
    <value>Linear</value>
  </data>
  <data name="CBItemNearestNeighbor" xml:space="preserve">
    <value>NearestNeighbor</value>
  </data>
  <data name="CBItemRandom" xml:space="preserve">
    <value>Random</value>
  </data>
  <data name="CustomInterval" xml:space="preserve">
    <value>Customize Interval</value>
  </data>
  <data name="GroupDisplaySettings" xml:space="preserve">
    <value>Display Settings</value>
  </data>
  <data name="GroupeUIText" xml:space="preserve">
    <value>UIText Settings</value>
  </data>
  <data name="GroupSlideSettings" xml:space="preserve">
    <value>Slideshow settings</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="icon255x255" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\icon255x255.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="InterpolationMethod" xml:space="preserve">
    <value>Interpolation Method</value>
  </data>
  <data name="LowerLeft" xml:space="preserve">
    <value>Lower Left</value>
  </data>
  <data name="LowerRight" xml:space="preserve">
    <value>Lower Right</value>
  </data>
  <data name="MemoryOfHistory" xml:space="preserve">
    <value>Memory of history</value>
  </data>
  <data name="Menu15s" xml:space="preserve">
    <value>15s</value>
  </data>
  <data name="Menu180s" xml:space="preserve">
    <value>3min</value>
  </data>
  <data name="Menu300s" xml:space="preserve">
    <value>5min</value>
  </data>
  <data name="Menu30s" xml:space="preserve">
    <value>30s</value>
  </data>
  <data name="Menu600s" xml:space="preserve">
    <value>10min</value>
  </data>
  <data name="Menu60s" xml:space="preserve">
    <value>60s</value>
  </data>
  <data name="Menu900s" xml:space="preserve">
    <value>15min</value>
  </data>
  <data name="Menu90s" xml:space="preserve">
    <value>90s</value>
  </data>
  <data name="MenuBackgroundColor" xml:space="preserve">
    <value>backgroundColor</value>
  </data>
  <data name="MenuBlack" xml:space="preserve">
    <value>Black</value>
  </data>
  <data name="MenuDisable" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="MenuEnable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="MenuFlip" xml:space="preserve">
    <value>Flip</value>
  </data>
  <data name="MenuFullScreen" xml:space="preserve">
    <value>FullScreen</value>
  </data>
  <data name="MenuGenerateRandomNum" xml:space="preserve">
    <value>Generate random numbers</value>
  </data>
  <data name="MenuGrayScale" xml:space="preserve">
    <value>GrayScale</value>
  </data>
  <data name="MenuGrid" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="MenuInterval" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="MenuListview" xml:space="preserve">
    <value>ListView</value>
  </data>
  <data name="MenuPauseResume" xml:space="preserve">
    <value>Pause/Resume</value>
  </data>
  <data name="MenuPreferences" xml:space="preserve">
    <value>Preferences</value>
  </data>
  <data name="MenuPreparationTime" xml:space="preserve">
    <value>PreparationTime</value>
  </data>
  <data name="MenuProgress" xml:space="preserve">
    <value>ProgressBar</value>
  </data>
  <data name="MenuQuit" xml:space="preserve">
    <value>Quit</value>
  </data>
  <data name="MenuRepeat" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="MenuReset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="MenuStartSlideshow" xml:space="preserve">
    <value>StartSlideshow</value>
  </data>
  <data name="MenuStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="MenuWhite" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="Not_record" xml:space="preserve">
    <value>Not record</value>
  </data>
  <data name="OutOfMemoryException" xml:space="preserve">
    <value>Reset because there is insufficient memory available for the application</value>
  </data>
  <data name="PreparationTime" xml:space="preserve">
    <value>PreparationTime</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="ScrollIntoView" xml:space="preserve">
    <value>ScrollIntoView</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Press SPACE to start</value>
  </data>
  <data name="StatusTextSize" xml:space="preserve">
    <value>StatusText Size</value>
  </data>
  <data name="TooltipAlignment" xml:space="preserve">
    <value>Select the text display position</value>
  </data>
  <data name="TooltipInterpolationMethod" xml:space="preserve">
    <value>Select the interpolation method</value>
  </data>
  <data name="TooltipPreparationTime" xml:space="preserve">
    <value>Set the preparation time (second)</value>
  </data>
  <data name="TooltipQuality" xml:space="preserve">
    <value>Loading with a fixed resolution reduces the load when loading high-resolution images</value>
  </data>
  <data name="TooltipResolution" xml:space="preserve">
    <value>Select the decoding resolution</value>
  </data>
  <data name="UnificationOfDisplayQuality" xml:space="preserve">
    <value>Unification of display quality</value>
  </data>
  <data name="UnifiedResolution" xml:space="preserve">
    <value>Unified Resolution</value>
  </data>
  <data name="UpperLeft" xml:space="preserve">
    <value>Upper Left</value>
  </data>
  <data name="UpperRight" xml:space="preserve">
    <value>Upper Right</value>
  </data>
</root>